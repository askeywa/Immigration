name: Deployment Monitoring

on:
  workflow_run:
    workflows: ["Deploy to Production"]
    types: [completed]

jobs:
  monitor-deployment:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Wait for Deployment
        run: sleep 30
      
      - name: Health Check
        run: |
          echo "üè• Performing post-deployment health check..."
          
          # Check application health
          if curl -f -s https://ibuyscrap.ca/api/health > /dev/null; then
            echo "‚úÖ Application health check passed"
            HEALTH_STATUS="healthy"
          else
            echo "‚ùå Application health check failed"
            HEALTH_STATUS="unhealthy"
          fi
      
      - name: Performance Check
        run: |
          echo "‚ö° Checking application performance..."
          
          # Measure response time
          RESPONSE_TIME=$(curl -o /dev/null -s -w '%{time_total}' https://ibuyscrap.ca/api/health)
          echo "Response time: ${RESPONSE_TIME}s"
          
          if (( $(echo "$RESPONSE_TIME < 2.0" | bc -l) )); then
            echo "‚úÖ Performance check passed"
            PERFORMANCE_STATUS="good"
          else
            echo "‚ö†Ô∏è Performance check failed - slow response time"
            PERFORMANCE_STATUS="slow"
          fi
      
      - name: Database Connection Check
        run: |
          echo "üóÑÔ∏è Checking database connectivity..."
          
          # Test database endpoint
          if curl -f -s https://ibuyscrap.ca/api/health/database > /dev/null; then
            echo "‚úÖ Database connection check passed"
            DB_STATUS="connected"
          else
            echo "‚ùå Database connection check failed"
            DB_STATUS="disconnected"
          fi
      
      - name: SSL Certificate Check
        run: |
          echo "üîí Checking SSL certificate..."
          
          SSL_EXPIRY=$(echo | openssl s_client -servername ibuyscrap.ca -connect ibuyscrap.ca:443 2>/dev/null | openssl x509 -noout -dates | grep "notAfter" | cut -d= -f2)
          SSL_DAYS=$(($(date -d "$SSL_EXPIRY" +%s) - $(date +%s)))
          SSL_DAYS=$((SSL_DAYS / 86400))
          
          echo "SSL certificate expires in $SSL_DAYS days"
          
          if [ $SSL_DAYS -gt 30 ]; then
            echo "‚úÖ SSL certificate is valid"
            SSL_STATUS="valid"
          else
            echo "‚ö†Ô∏è SSL certificate expires soon"
            SSL_STATUS="expiring"
          fi
      
      - name: Send Deployment Notification
        if: always()
        run: |
          echo "üìß Sending deployment notification..."
          
          # Create notification message
          if [ "${{ github.event.workflow_run.conclusion }}" == "success" ]; then
            STATUS_EMOJI="‚úÖ"
            STATUS_TEXT="SUCCESS"
          else
            STATUS_EMOJI="‚ùå"
            STATUS_TEXT="FAILED"
          fi
          
          MESSAGE="üöÄ Deployment $STATUS_TEXT $STATUS_EMOJI
          
          üìä Deployment Details:
          ‚Ä¢ Repository: ${{ github.repository }}
          ‚Ä¢ Branch: ${{ github.ref_name }}
          ‚Ä¢ Commit: ${{ github.sha }}
          ‚Ä¢ Workflow: ${{ github.event.workflow_run.name }}
          ‚Ä¢ Triggered by: ${{ github.event.workflow_run.head_commit.author.name }}
          
          üîç Post-Deployment Checks:
          ‚Ä¢ Health Status: $HEALTH_STATUS
          ‚Ä¢ Performance: $PERFORMANCE_STATUS
          ‚Ä¢ Database: $DB_STATUS
          ‚Ä¢ SSL Certificate: $SSL_STATUS
          
          üåê Application URL: https://ibuyscrap.ca
          üìà Monitoring: Check Sentry and New Relic dashboards"
          
          echo "$MESSAGE"
      
      - name: Create Deployment Summary
        if: always()
        run: |
          echo "üìã Creating deployment summary..."
          
          cat > deployment-summary.md << EOF
          # Deployment Summary
          
          **Date:** $(date)
          **Status:** ${{ github.event.workflow_run.conclusion }}
          **Repository:** ${{ github.repository }}
          **Branch:** ${{ github.ref_name }}
          **Commit:** ${{ github.sha }}
          
          ## Health Checks
          - Application Health: $HEALTH_STATUS
          - Performance: $PERFORMANCE_STATUS
          - Database: $DB_STATUS
          - SSL Certificate: $SSL_STATUS
          
          ## Next Steps
          EOF
          
          if [ "$HEALTH_STATUS" != "healthy" ]; then
            echo "- üî¥ **CRITICAL:** Application health check failed - investigate immediately" >> deployment-summary.md
          fi
          
          if [ "$PERFORMANCE_STATUS" == "slow" ]; then
            echo "- üü° **WARNING:** Performance degradation detected - monitor closely" >> deployment-summary.md
          fi
          
          if [ "$SSL_STATUS" == "expiring" ]; then
            echo "- üü° **WARNING:** SSL certificate expires soon - renew before expiry" >> deployment-summary.md
          fi
          
          echo "- üìä Monitor application metrics in Sentry and New Relic" >> deployment-summary.md
          echo "- üîç Check application logs for any errors" >> deployment-summary.md
          echo "- üß™ Run smoke tests to verify functionality" >> deployment-summary.md
          
          echo "üìÑ Deployment summary created"
