name: Deploy to EC2

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install backend dependencies
        run: |
          cd backend
          npm ci
      
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Build backend
        run: |
          cd backend
          npm run build
      
      - name: Build frontend
        run: |
          cd frontend
          npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # Copy environment file (if exists)
          if [ -f "env.production.template" ]; then
            scp -i private_key.pem -o StrictHostKeyChecking=no env.production.template ${USER}@${HOST}:/home/ubuntu/app/backend/.env
            echo "Environment file copied successfully"
          else
            echo "Environment template not found, skipping copy"
          fi
          
          # Deploy application
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${USER}@${HOST} '
            echo "Starting backup deployment..."
            cd /home/ubuntu/app &&
            echo "Current directory: $(pwd)" &&
            echo "Directory contents: $(ls -la)" &&
            
            # Check if git repository exists
            if [ -d ".git" ]; then
              echo "Git repository found, pulling latest changes..."
              git pull origin main || echo "Git pull failed, continuing with existing code"
            else
              echo "No git repository found, continuing with existing code"
            fi &&
            
            # Install dependencies
            echo "Installing backend dependencies..."
            cd backend && npm install --production &&
            echo "Installing frontend dependencies..."
            cd ../frontend && npm install --production &&
            
            # Build application
            echo "Building backend..."
            cd ../backend && npm run build &&
            echo "Building frontend..."
            cd ../frontend && npm run build &&
            
            # Restart application
            echo "Restarting application with PM2..."
            cd .. && pm2 reload ecosystem.config.js --env production || pm2 start ecosystem.config.js --env production
          '
          
          rm -f private_key.pem
